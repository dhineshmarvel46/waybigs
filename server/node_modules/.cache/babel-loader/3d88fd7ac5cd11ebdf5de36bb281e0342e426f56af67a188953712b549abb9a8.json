{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dhine\\\\OneDrive\\\\Desktop\\\\emart-new\\\\src\\\\component\\\\Buyproduct.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Buyproduct() {\n  _s();\n  const {\n    id\n  } = useParams();\n  const [product, setProduct] = useState([]);\n  const [loading, setLoading] = useState(false);\n  useEffect(() => {\n    const getproduct = async () => {\n      setLoading(true);\n      try {\n        const response = await fetch(`https://api.allorigins.win/get?url=https://mocki.io/v1/a580e31c-8c68-4f73-a8be-8f9bc9af1cae/${id}`);\n        const data = await response.json();\n        if (data && data.contents) {\n          // The API response is wrapped in 'contents', so you need to parse it\n          const productData = JSON.parse(data.contents);\n          setProduct(productData);\n        } else {\n          throw new Error('No valid product data found');\n        }\n      } catch (error) {\n        console.error('Error fetching product:', error);\n      } finally {\n        setLoading(false);\n      }\n    };\n    getproduct();\n  }, [id]);\n  const ShowProducts = () => {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-6\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: product.image,\n          alt: product.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 21\n        }, this)\n      }, product.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 12\n      }, this)\n    }, void 0, false);\n  };\n  const Loading = () => {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"d-flex justify-content-center\",\n        children: \"Loading.....\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this)\n    }, void 0, false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"d-flex justify-content-center\",\n      children: loading ? /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 12\n      }, this) : /*#__PURE__*/_jsxDEV(ShowProducts, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 25\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 1\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n}\n_s(Buyproduct, \"nhP2MroB+1NQl2m6M0oZsw+w4/w=\", false, function () {\n  return [useParams];\n});\n_c = Buyproduct;\nexport default Buyproduct;\nvar _c;\n$RefreshReg$(_c, \"Buyproduct\");","map":{"version":3,"names":["React","useState","useEffect","useParams","jsxDEV","_jsxDEV","Fragment","_Fragment","Buyproduct","_s","id","product","setProduct","loading","setLoading","getproduct","response","fetch","data","json","contents","productData","JSON","parse","Error","error","console","ShowProducts","children","className","src","image","alt","title","fileName","_jsxFileName","lineNumber","columnNumber","Loading","_c","$RefreshReg$"],"sources":["C:/Users/dhine/OneDrive/Desktop/emart-new/src/component/Buyproduct.js"],"sourcesContent":["import React,{useState,useEffect}from \"react\"\r\nimport { useParams } from \"react-router-dom\"\r\n\r\n\r\nfunction Buyproduct() {\r\n    const { id } = useParams();\r\n    const [product, setProduct] = useState([]);\r\n    const [loading,setLoading] = useState(false);\r\n\r\n    useEffect(() => {\r\nconst getproduct = async () => {\r\n    setLoading(true);\r\n    try {\r\n      const response = await fetch(`https://api.allorigins.win/get?url=https://mocki.io/v1/a580e31c-8c68-4f73-a8be-8f9bc9af1cae/${id}`);\r\n      const data = await response.json();\r\n      \r\n      if (data && data.contents) {\r\n        // The API response is wrapped in 'contents', so you need to parse it\r\n        const productData = JSON.parse(data.contents);\r\n        setProduct(productData);\r\n      } else {\r\n        throw new Error('No valid product data found');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error fetching product:', error);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  \r\n\r\n  }\r\n  getproduct();\r\n    },[id])\r\n\r\n    const ShowProducts = () => {\r\n        return(\r\n            <>\r\n           <div className=\"col-md-6\" key={product.id}>\r\n                    <img src={product.image} alt={product.title} />\r\n                </div>\r\n            </>\r\n\r\n        )\r\n    }\r\n\r\n   const Loading = () =>{\r\n    return(\r\n        <>\r\n        <div className=\"d-flex justify-content-center\">Loading.....</div>\r\n        </>\r\n    )\r\n   } \r\n  return (\r\n    <div>\r\n<div className='d-flex justify-content-center'>\r\n{loading ? <Loading />: <ShowProducts/>}\r\n</div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Buyproduct"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}